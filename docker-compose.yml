version: '3'
volumes:
  pgdata:
  pgadmin:
  postgres_backup:
networks: 
  postgres_network:
    external: true
services:
  # Python for Django server
  python: &python
    # image: python:3.5
    build:
      context: .
      dockerfile: docker/dev/python/Dockerfile
    environment:
    - PYTHONUNBUFFERED=1
    volumes:
      - ./:/webserver
    ports:
      - 80:8000
    networks:
      - postgres_network
    command: python /webserver/manage.py runserver 0.0.0.0:8000
    depends_on:
      - rabbitmq
      - celery_worker
    restart: always
  ## RabbitMQ as message queue for Celery
  rabbitmq:
    image: rabbitmq:3.7-alpine
  celery_worker:
    # Copy template from service Python
    <<: *python
    command: celery -A app worker --scheduler django --loglevel=info #&& celery -A app beat --loglevel info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    ports: []
    restart: always
    volumes:
      - ./:/webserver
    depends_on:
      - rabbitmq
  # GUI for taskmanager Celery
  flower:
    image: mher/flower
    command: ["flower", "--broker=amqp://guest:guest@rabbitmq/", "--port=8888"]
    restart: always
    ports:
      - ${FLOWER_PORT}:8888