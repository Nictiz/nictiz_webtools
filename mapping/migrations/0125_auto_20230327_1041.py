# Generated by Django 3.1.14 on 2023-03-27 08:41

from datetime import datetime

from django.db.models import Q
from django.db import migrations
import psycopg2
from pprint import pprint


def migrate_results(apps, _):
    """Migrate legacy MappingECLPart.results into MappingECLConcept records."""

    MappingProject = apps.get_model("mapping", "MappingProject")
    MappingECLPart = apps.get_model("mapping", "MappingECLPart")
    MappingECLConcept = apps.get_model("mapping", "MappingECLConcept")

    parts = MappingECLPart.objects.exclude(
        Q(failed=True) | Q(finished=False)
    )
    print("-")
    print(parts.count())
    total = 0
    errors = []
    for part in parts:
        print(".", end="")
        concepts = []
        for result in part.result["concepts"].values():
            concept_date = None
            if result["effectiveTime"]:
                concept_date = datetime.strptime(result["effectiveTime"], "%Y%m%d")
            concepts.append(MappingECLConcept(
                ecl=part,
                task_id=part.task_id,
                code=result.get("conceptId"),
                module_id=result.get("moduleId"),
                effective_time=concept_date,
                definition_status=result.get("definitionStatus"),
                id_and_fsn_term=result.get("idAndFsnTerm", "{} | {}".format(
                    result.get("conceptId"),
                    result.get("fsn", {}).get("term", "")
                )),
                active=result.get("active"),
                preferred_title=result.get("pt", {}).get("term", ""),
                pt_lang=result.get("pt", {}).get("lang", ""),
                fsn=result.get("fsn", {}).get("term", ""),
                fsn_lang=result.get("fsn", {}).get("lang", "")
            ))
        total += len(concepts)
        MappingECLConcept.objects.bulk_create(concepts)

    print(f"Created {total} concepts.")
    print(f"Found errors: {len(errors)}")


def cleanup(apps, _):
    """Clean database when rolling migration backwards."""

    MappingECLConcept = apps.get_model("mapping", "MappingECLConcept")

    MappingECLConcept.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('mapping', '0124_auto_20230323_1603'),
    ]

    operations = [
        migrations.RunPython(code=migrate_results, reverse_code=cleanup)
    ]
